---
// @ts-ignore
import { Icon } from "astro-icon/components";
import { Tick } from "@/components/ui/icons";
import Link from "@/components/ui/link.astro";
import Button from "@/components/ui/button.astro";
import ComponentGrid from "./ComponentGrid.astro";

// Helper function to generate code snippet
function generateCodeSnippet(html: string): string {
  return html.replace(/^\s+/gm, '').trim();
}

// Sample data for demonstrations

const pricingPlans = [
  {
    name: "Starter",
    price: "$9",
    features: ["5 Projects", "10GB Storage", "Email Support", "Basic Analytics"],
    popular: false,
  },
  {
    name: "Pro",
    price: "$29",
    features: ["Unlimited Projects", "100GB Storage", "Priority Support", "Advanced Analytics", "Team Collaboration"],
    popular: true,
  },
];
---

<div class="card-showcase space-y-16">
  <!-- Wireframe Basic Cards -->
  <ComponentGrid 
    title="Wireframe Basic Cards" 
    description="Hand-drawn cards with DoodleCSS borders, monochrome styling, and authentic sketch aesthetics"
    columns={3}
  >
    <!-- Simple Wireframe Card -->
    <div class="showcase-item doodle-border">
      <div class="component-demo doodle-border mb-4">
        <div class="p-6 wireframe-box doodle-border max-w-sm">
          <h3 class="wireframe-heading text-lg mb-2">Card Title</h3>
          <p class="wireframe-text">This is a wireframe card with hand-drawn borders and monochrome styling.</p>
        </div>
      </div>
      <div class="component-info">
        <h4 class="font-semibold theme-headline mb-2">Simple Wireframe Card</h4>
        <p class="text-sm theme-paragraph mb-3">Basic wireframe card with DoodleCSS borders and authentic sketch styling</p>
        <code class="code-snippet">
          {generateCodeSnippet(`<div class="p-6 wireframe-box">
  <h3 class="wireframe-heading text-lg">Card Title</h3>
  <p class="wireframe-text">Card content...</p>
</div>`)}
        </code>
      </div>
    </div>

    <!-- Wireframe Card with Sections -->
    <div class="showcase-item doodle-border">
      <div class="component-demo doodle-border mb-4">
        <div class="wireframe-box doodle-border max-w-sm">
          <div class="px-6 py-4 wireframe-section">
            <h3 class="wireframe-heading text-lg">Header</h3>
          </div>
          <div class="px-6 py-4">
            <p class="wireframe-text">Main content area with hand-drawn dividers and sketch styling.</p>
          </div>
          <div class="px-6 py-4 wireframe-section">
            <p class="text-sm wireframe-text opacity-75">Footer content</p>
          </div>
        </div>
      </div>
      <div class="component-info">
        <h4 class="font-semibold theme-headline mb-2">Structured Wireframe Card</h4>
        <p class="text-sm theme-paragraph mb-3">Multi-section wireframe card with hand-drawn dividers</p>
        <code class="code-snippet">
          {generateCodeSnippet(`<div class="wireframe-box">
  <div class="px-6 py-4 wireframe-section">
    <h3 class="wireframe-heading text-lg">Header</h3>
  </div>
  <div class="px-6 py-4">
    <p class="wireframe-text">Content...</p>
  </div>
  <div class="px-6 py-4 wireframe-section">
    <p class="text-sm wireframe-text">Footer</p>
  </div>
</div>`)}
        </code>
      </div>
    </div>

    <!-- Wireframe Action Card -->
    <div class="showcase-item doodle-border">
      <div class="component-demo doodle-border mb-4">
        <div class="p-6 wireframe-box doodle-border max-w-sm">
          <h3 class="wireframe-heading text-lg mb-2">Action Card</h3>
          <p class="wireframe-text mb-4">Wireframe card with hand-drawn button for prototyping interactions.</p>
          <Button size="md" style="primary" class="doodle">Take Action</Button>
        </div>
      </div>
      <div class="component-info">
        <h4 class="font-semibold theme-headline mb-2">Wireframe Action Card</h4>
        <p class="text-sm theme-paragraph mb-3">Action card with DoodleCSS button styling for authentic wireframes</p>
        <code class="code-snippet">
          {generateCodeSnippet(`<div class="p-6 wireframe-box">
  <h3 class="wireframe-heading text-lg">Title</h3>
  <p class="wireframe-text mb-4">Content...</p>
  <Button style="primary" class="doodle">Take Action</Button>
</div>`)}
        </code>
      </div>
    </div>
  </ComponentGrid>

  <!-- Wireframe Feature Cards -->
  <ComponentGrid 
    title="Wireframe Feature Cards" 
    description="Hand-drawn icon cards with monochrome styling for authentic wireframe prototypes"
    columns={2}
  >
    <!-- Wireframe Icon Feature -->
    <div class="showcase-item doodle-border">
      <div class="component-demo doodle-border mb-4">
        <div class="flex gap-4 items-start max-w-sm wireframe-box doodle-border p-4">
          <div class="mt-1 w-8 h-8 shrink-0 wireframe-section p-2">
            <Icon name="bx:bxs-star" class="w-4 h-4" style="color: var(--color-theme-button);" />
          </div>
          <div>
            <h3 class="wireframe-heading text-lg">Premium Feature</h3>
            <p class="mt-2 leading-relaxed wireframe-text">Advanced functionality with hand-drawn icon styling.</p>
          </div>
        </div>
      </div>
      <div class="component-info">
        <h4 class="font-semibold theme-headline mb-2">Wireframe Icon Feature</h4>
        <p class="text-sm theme-paragraph mb-3">Feature card with hand-drawn icon container and monochrome styling</p>
        <code class="code-snippet">
          {generateCodeSnippet(`<div class="flex gap-4 items-start wireframe-box p-4">
  <div class="mt-1 w-8 h-8 shrink-0 wireframe-section p-2">
    <Icon name="bx:bxs-star" class="w-4 h-4" 
          style="color: var(--color-theme-button);" />
  </div>
  <div>
    <h3 class="wireframe-heading text-lg">Title</h3>
    <p class="wireframe-text">Description...</p>
  </div>
</div>`)}
        </code>
      </div>
    </div>

    <!-- Wireframe Feature Grid -->
    <div class="showcase-item doodle-border">
      <div class="component-demo doodle-border mb-4">
        <div class="wireframe-section p-4 max-w-lg">
          <div class="space-y-6">
            <div class="flex gap-4 items-start">
              <div class="mt-1 w-8 h-8 shrink-0 wireframe-box doodle-border p-2">
                <Icon name="bx:bxs-bolt-circle" class="w-4 h-4" style="color: var(--color-theme-button);" />
              </div>
              <div>
                <h3 class="wireframe-heading text-lg">Fast Performance</h3>
                <p class="mt-2 leading-relaxed wireframe-text text-sm">Lightning-fast with authentic wireframe styling and minimal overhead.</p>
              </div>
            </div>
            <div class="flex gap-4 items-start">
              <div class="mt-1 w-8 h-8 shrink-0 wireframe-box doodle-border p-2">
                <Icon name="bx:bxs-wrench" class="w-4 h-4" style="color: var(--color-theme-button);" />
              </div>
              <div>
                <h3 class="wireframe-heading text-lg">Developer Experience</h3>
                <p class="mt-2 leading-relaxed wireframe-text text-sm">Built with DoodleCSS and hand-drawn aesthetics for rapid prototyping.</p>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="component-info">
        <h4 class="font-semibold theme-headline mb-2">Wireframe Feature Grid</h4>
        <p class="text-sm theme-paragraph mb-3">Multiple wireframe features with consistent hand-drawn styling</p>
        <code class="code-snippet">
          {generateCodeSnippet(`<div class="wireframe-section p-4">
  <div class="space-y-6">
    <div class="flex gap-4 items-start">
      <div class="wireframe-box p-2 w-8 h-8">
        <Icon name="bx:bxs-bolt" style="color: var(--color-theme-button);" />
      </div>
      <div>
        <h3 class="wireframe-heading">Feature Title</h3>
        <p class="wireframe-text">Description...</p>
      </div>
    </div>
  </div>
</div>`)}
        </code>
      </div>
    </div>
  </ComponentGrid>

  <!-- Wireframe Pricing Cards -->
  <ComponentGrid 
    title="Wireframe Pricing Cards" 
    description="Hand-drawn pricing cards with DoodleCSS borders perfect for wireframe mockups and prototypes"
    columns={2}
  >
    <!-- Basic Wireframe Pricing -->
    <div class="showcase-item doodle-border">
      <div class="component-demo doodle-border mb-4">
        <div class="wireframe-box doodle-border py-5 px-6 max-w-sm">
          <div class="text-center wireframe-section pb-4">
            <h4 class="text-lg wireframe-heading">Basic Plan</h4>
            <p class="mt-3 text-4xl wireframe-heading">$19</p>
          </div>
          <ul class="space-y-4 mt-6">
            <li class="flex items-start gap-3 wireframe-text">
              <Tick class="w-6 h-6" style="color: var(--color-theme-button);" />
              <span>Feature included</span>
            </li>
            <li class="flex items-start gap-3 wireframe-text">
              <Tick class="w-6 h-6" style="color: var(--color-theme-button);" />
              <span>Another feature</span>
            </li>
          </ul>
        </div>
      </div>
      <div class="component-info">
        <h4 class="font-semibold theme-headline mb-2">Wireframe Pricing</h4>
        <p class="text-sm theme-paragraph mb-3">Hand-drawn pricing card with DoodleCSS borders and authentic sketch styling</p>
        <code class="code-snippet">
          {generateCodeSnippet(`<div class="wireframe-box py-5 px-6">
  <div class="text-center wireframe-section pb-4">
    <h4 class="wireframe-heading">Plan Name</h4>
    <p class="text-4xl wireframe-heading">$19</p>
  </div>
  <ul class="space-y-4 mt-6">
    <li class="flex items-start gap-3 wireframe-text">
      <Tick class="w-6 h-6" style="color: var(--color-theme-button);" />
      <span>Feature</span>
    </li>
  </ul>
</div>`)}
        </code>
      </div>
    </div>

    <!-- Complete Wireframe Pricing -->
    <div class="showcase-item doodle-border">
      <div class="component-demo doodle-border mb-4">
        <div class="wireframe-box doodle-border py-5 px-6 max-w-sm">
          <div class="text-center wireframe-section pb-4">
            <h4 class="text-lg wireframe-heading">Pro Plan</h4>
            <p class="mt-3 text-4xl wireframe-heading">$49</p>
          </div>
          <ul class="space-y-4 mt-6">
            <li class="flex items-start gap-3 wireframe-text">
              <Tick class="w-6 h-6" style="color: var(--color-theme-button);" />
              <span>Everything in Basic</span>
            </li>
            <li class="flex items-start gap-3 wireframe-text">
              <Tick class="w-6 h-6" style="color: var(--color-theme-button);" />
              <span>Advanced features</span>
            </li>
            <li class="flex items-start gap-3 wireframe-text">
              <Tick class="w-6 h-6" style="color: var(--color-theme-button);" />
              <span>Priority support</span>
            </li>
          </ul>
          <div class="flex mt-8">
            <Link href="#" block style="primary" class="doodle">Get Started</Link>
          </div>
        </div>
      </div>
      <div class="component-info">
        <h4 class="font-semibold theme-headline mb-2">Complete Wireframe Pricing</h4>
        <p class="text-sm theme-paragraph mb-3">Full wireframe pricing card with hand-drawn button and authentic sketch aesthetics</p>
        <code class="code-snippet">
          {generateCodeSnippet(`<div class="wireframe-box py-5 px-6">
  <!-- Header with pricing -->
  <div class="text-center wireframe-section pb-4">
    <h4 class="wireframe-heading">Plan Name</h4>
    <p class="text-4xl wireframe-heading">$49</p>
  </div>
  
  <!-- Features list -->
  <ul class="space-y-4 mt-6">...</ul>
  
  <!-- CTA Button -->
  <div class="flex mt-8">
    <Link href="#" block style="primary" class="doodle">Get Started</Link>
  </div>
</div>`)}
        </code>
      </div>
    </div>
  </ComponentGrid>

  <!-- Wireframe Layout Cards -->
  <ComponentGrid 
    title="Wireframe Layout Cards" 
    description="Cards with placeholder content areas and hand-drawn styling for mockups and prototypes"
    columns={2}
  >
    <!-- Wireframe Media Card -->
    <div class="showcase-item doodle-border">
      <div class="component-demo doodle-border mb-4">
        <div class="wireframe-box doodle-border max-w-sm">
          <div class="wireframe-section p-6 text-center">
            <div class="w-16 h-16 mx-auto mb-4 wireframe-box doodle-border flex items-center justify-center">
              <Icon name="bx:bx-image" class="w-8 h-8" style="color: var(--color-theme-button);" />
            </div>
            <p class="wireframe-text text-sm opacity-75">[Image Placeholder]</p>
          </div>
          <div class="p-6">
            <h3 class="wireframe-heading text-lg mb-2">Media Card</h3>
            <p class="wireframe-text">Card with placeholder media area perfect for wireframing layouts.</p>
          </div>
        </div>
      </div>
      <div class="component-info">
        <h4 class="font-semibold theme-headline mb-2">Wireframe Media Card</h4>
        <p class="text-sm theme-paragraph mb-3">Card with hand-drawn media placeholder and authentic wireframe styling</p>
        <code class="code-snippet">
          {generateCodeSnippet(`<div class="wireframe-box">
  <div class="wireframe-section p-6 text-center">
    <div class="wireframe-box w-16 h-16 mx-auto mb-4">
      <Icon name="bx:bx-image" style="color: var(--color-theme-button);" />
    </div>
    <p class="wireframe-text opacity-75">[Image Placeholder]</p>
  </div>
  <div class="p-6">
    <h3 class="wireframe-heading">Title</h3>
    <p class="wireframe-text">Content...</p>
  </div>
</div>`)}
        </code>
      </div>
    </div>

    <!-- Wireframe Content Block -->
    <div class="showcase-item doodle-border">
      <div class="component-demo doodle-border mb-4">
        <div class="wireframe-box doodle-border max-w-sm p-6">
          <div class="wireframe-section mb-4 p-4">
            <div class="flex items-center gap-3 mb-3">
              <div class="w-12 h-12 wireframe-box doodle-border flex items-center justify-center">
                <Icon name="bx:bx-user" class="w-6 h-6" style="color: var(--color-theme-button);" />
              </div>
              <div class="flex-1">
                <div class="wireframe-text text-sm">Username</div>
                <div class="wireframe-text text-xs opacity-75">@handle</div>
              </div>
            </div>
            <p class="wireframe-text text-sm">Content block with user info and wireframe styling for social media mockups.</p>
          </div>
          <div class="flex gap-2">
            <button class="px-3 py-1 text-xs wireframe-box doodle-border">Like</button>
            <button class="px-3 py-1 text-xs wireframe-box doodle-border">Share</button>
          </div>
        </div>
      </div>
      <div class="component-info">
        <h4 class="font-semibold theme-headline mb-2">Wireframe Content Block</h4>
        <p class="text-sm theme-paragraph mb-3">Social media style card with user info and interaction elements</p>
        <code class="code-snippet">
          {generateCodeSnippet(`<div class="wireframe-box p-6">
  <div class="wireframe-section mb-4 p-4">
    <div class="flex items-center gap-3 mb-3">
      <div class="wireframe-box w-12 h-12">
        <Icon name="bx:bx-user" />
      </div>
      <div>
        <div class="wireframe-text">Username</div>
        <div class="wireframe-text opacity-75">@handle</div>
      </div>
    </div>
    <p class="wireframe-text">Content text...</p>
  </div>
  <div class="flex gap-2">
    <button class="wireframe-box px-3 py-1">Action</button>
  </div>
</div>`)}
        </code>
      </div>
    </div>
  </ComponentGrid>

  <!-- Wireframe Spacing Variations -->
  <ComponentGrid 
    title="Wireframe Spacing Variations" 
    description="Different padding and spacing options for wireframe cards across various mockup scenarios"
    columns={3}
  >
    <!-- Compact Wireframe -->
    <div class="showcase-item doodle-border">
      <div class="component-demo doodle-border mb-4">
        <div class="p-4 wireframe-box doodle-border max-w-sm">
          <h3 class="wireframe-heading mb-1">Compact</h3>
          <p class="text-sm wireframe-text">Minimal padding for dense wireframe layouts.</p>
        </div>
      </div>
      <div class="component-info">
        <h4 class="font-semibold theme-headline mb-2">Compact Wireframe (p-4)</h4>
        <p class="text-sm theme-paragraph mb-3">Minimal padding with hand-drawn borders for dense information</p>
        <code class="code-snippet">p-4 wireframe-box</code>
      </div>
    </div>

    <!-- Standard Wireframe -->
    <div class="showcase-item doodle-border">
      <div class="component-demo doodle-border mb-4">
        <div class="p-6 wireframe-box doodle-border max-w-sm">
          <h3 class="wireframe-heading mb-2">Standard</h3>
          <p class="text-sm wireframe-text">Default padding for most wireframe use cases.</p>
        </div>
      </div>
      <div class="component-info">
        <h4 class="font-semibold theme-headline mb-2">Standard Wireframe (p-6)</h4>
        <p class="text-sm theme-paragraph mb-3">Default padding with DoodleCSS styling used throughout the wireframe system</p>
        <code class="code-snippet">p-6 wireframe-box</code>
      </div>
    </div>

    <!-- Spacious Wireframe -->
    <div class="showcase-item doodle-border">
      <div class="component-demo doodle-border mb-4">
        <div class="p-8 wireframe-box doodle-border max-w-sm">
          <h3 class="wireframe-heading mb-3">Spacious</h3>
          <p class="text-sm wireframe-text">Extra padding for hero sections or emphasis in wireframe designs.</p>
        </div>
      </div>
      <div class="component-info">
        <h4 class="font-semibold theme-headline mb-2">Spacious Wireframe (p-8)</h4>
        <p class="text-sm theme-paragraph mb-3">Extra padding with authentic hand-drawn styling for important content</p>
        <code class="code-snippet">p-8 wireframe-box</code>
      </div>
    </div>
  </ComponentGrid>

  <!-- Hover Effects and Interactions -->
  <ComponentGrid 
    title="Interactive Cards" 
    description="Cards with hover effects, transitions, and interactive states"
    columns={2}
  >
    <!-- Hover Lift Card -->
    <div class="showcase-item doodle-border">
      <div class="component-demo doodle-border mb-4">
        <div class="p-6 rounded-lg theme-card-bg max-w-sm transition-all duration-300 hover:shadow-lg hover:-translate-y-1 cursor-pointer">
          <h3 class="font-semibold text-lg theme-headline mb-2">Hover Lift</h3>
          <p class="theme-paragraph">Card lifts up on hover with shadow effect.</p>
        </div>
      </div>
      <div class="component-info">
        <h4 class="font-semibold theme-headline mb-2">Hover Lift Effect</h4>
        <p class="text-sm theme-paragraph mb-3">Card with lift animation and shadow on hover</p>
        <code class="code-snippet">
          {generateCodeSnippet(`<div class="p-6 rounded-lg theme-card-bg transition-all duration-300 
     hover:shadow-lg hover:-translate-y-1 cursor-pointer">
  <h3 class="theme-headline">Hover Lift</h3>
  <p class="theme-paragraph">Content...</p>
</div>`)}
        </code>
      </div>
    </div>

    <!-- Hover Border Card -->
    <div class="showcase-item doodle-border">
      <div class="component-demo doodle-border mb-4">
        <div class="p-6 rounded-lg theme-card-bg border-2 border-transparent max-w-sm transition-all duration-300 hover:border-current cursor-pointer" style="border-color: transparent; --tw-border-opacity: 0;">
          <h3 class="font-semibold text-lg theme-headline mb-2">Hover Border</h3>
          <p class="theme-paragraph">Border appears on hover interaction.</p>
        </div>
      </div>
      <div class="component-info">
        <h4 class="font-semibold theme-headline mb-2">Hover Border</h4>
        <p class="text-sm theme-paragraph mb-3">Card with border that appears on hover</p>
        <code class="code-snippet">
          {generateCodeSnippet(`<div class="p-6 rounded-lg theme-card-bg border-2 border-transparent 
     transition-all duration-300 hover:border-current cursor-pointer">
  <h3 class="theme-headline">Hover Border</h3>
  <p class="theme-paragraph">Content...</p>
</div>`)}
        </code>
      </div>
    </div>
  </ComponentGrid>

  <!-- Responsive Card Layouts -->
  <ComponentGrid 
    title="Responsive Layouts" 
    description="Cards that adapt to different screen sizes and grid systems"
    columns={1}
  >
    <!-- Responsive Grid -->
    <div class="showcase-item doodle-border">
      <div class="component-demo doodle-border mb-4">
        <div class="grid sm:grid-cols-2 lg:grid-cols-3 gap-6 max-w-4xl">
          <div class="p-6 rounded-lg theme-card-bg">
            <div class="mb-4 rounded-full p-2 w-8 h-8 inline-flex items-center justify-center" style="background-color: var(--color-theme-button);">
              <Icon name="bx:bxs-bolt-circle" class="text-white w-4 h-4" />
            </div>
            <h3 class="font-semibold text-lg theme-headline mb-2">Fast Performance</h3>
            <p class="theme-paragraph text-sm">Lightning-fast loading times with optimized components and minimal JavaScript.</p>
          </div>
          <div class="p-6 rounded-lg theme-card-bg">
            <div class="mb-4 rounded-full p-2 w-8 h-8 inline-flex items-center justify-center" style="background-color: var(--color-theme-button);">
              <Icon name="bx:bxs-wrench" class="text-white w-4 h-4" />
            </div>
            <h3 class="font-semibold text-lg theme-headline mb-2">Developer Experience</h3>
            <p class="theme-paragraph text-sm">Built with modern tooling and best practices for an excellent development workflow.</p>
          </div>
          <div class="p-6 rounded-lg theme-card-bg">
            <div class="mb-4 rounded-full p-2 w-8 h-8 inline-flex items-center justify-center" style="background-color: var(--color-theme-button);">
              <Icon name="bx:bxs-devices" class="text-white w-4 h-4" />
            </div>
            <h3 class="font-semibold text-lg theme-headline mb-2">Responsive Design</h3>
            <p class="theme-paragraph text-sm">Looks great on all devices with mobile-first responsive design principles.</p>
          </div>
        </div>
      </div>
      <div class="component-info">
        <h4 class="font-semibold theme-headline mb-2">Responsive Card Grid</h4>
        <p class="text-sm theme-paragraph mb-3">Cards that stack on mobile and form grids on larger screens</p>
        <code class="code-snippet">
          {generateCodeSnippet(`<div class="grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
  {cards.map((card) => (
    <div class="p-6 rounded-lg theme-card-bg">
      <!-- Card content -->
    </div>
  ))}
</div>`)}
        </code>
      </div>
    </div>

    <!-- Flex Layout -->
    <div class="showcase-item doodle-border">
      <div class="component-demo doodle-border mb-4">
        <div class="flex flex-col md:flex-row gap-6 max-w-4xl">
          <div class="flex-1 p-6 rounded-lg theme-card-bg">
            <h3 class="font-semibold text-lg theme-headline mb-2">Flex Card 1</h3>
            <p class="theme-paragraph">Cards in flexible layout that adjusts to content.</p>
          </div>
          <div class="flex-1 p-6 rounded-lg theme-card-bg">
            <h3 class="font-semibold text-lg theme-headline mb-2">Flex Card 2</h3>
            <p class="theme-paragraph">Equal width cards that stack on mobile devices.</p>
          </div>
        </div>
      </div>
      <div class="component-info">
        <h4 class="font-semibold theme-headline mb-2">Flexible Layout</h4>
        <p class="text-sm theme-paragraph mb-3">Cards in flex layout that adapts to screen size</p>
        <code class="code-snippet">
          {generateCodeSnippet(`<div class="flex flex-col md:flex-row gap-6">
  <div class="flex-1 p-6 rounded-lg theme-card-bg">
    <!-- Card content -->
  </div>
  <div class="flex-1 p-6 rounded-lg theme-card-bg">
    <!-- Card content -->
  </div>
</div>`)}
        </code>
      </div>
    </div>
  </ComponentGrid>

  <!-- Monochrome Theme Adaptation -->
  <ComponentGrid 
    title="Monochrome Theme Adaptation" 
    description="How wireframe cards adapt across the 8 monochrome themes with authentic hand-drawn aesthetics"
    columns={2}
  >
    <!-- Monochrome Demo -->
    <div class="showcase-item doodle-border">
      <div class="component-demo doodle-border mb-4">
        <div class="space-y-4 max-w-sm">
          <div class="p-4 wireframe-box doodle-border">
            <h4 class="wireframe-heading">Wireframe Card</h4>
            <p class="text-sm wireframe-text">Adapts to all 8 monochrome themes</p>
          </div>
          <div class="p-4 wireframe-section">
            <h4 class="wireframe-heading">Section Block</h4>
            <p class="text-sm wireframe-text">Hand-drawn dividers and borders</p>
          </div>
        </div>
      </div>
      <div class="component-info">
        <h4 class="font-semibold theme-headline mb-2">Monochrome Variables</h4>
        <p class="text-sm theme-paragraph mb-3">Wireframe cards automatically adapt to all 8 monochrome themes</p>
        <code class="code-snippet">
          {generateCodeSnippet(`<!-- Wireframe elements -->
wireframe-box
wireframe-section
wireframe-heading
wireframe-text

<!-- DoodleCSS integration -->
.doodle class for authentic borders`)}
        </code>
      </div>
    </div>

    <!-- Wireframe Features -->
    <div class="showcase-item doodle-border">
      <div class="component-info">
        <h4 class="font-semibold theme-headline mb-2">Wireframe Features</h4>
        <div class="space-y-3 text-sm theme-paragraph">
          <div>
            <h5 class="font-medium theme-headline mb-1">Hand-Drawn Borders</h5>
            <p>Authentic DoodleCSS borders with natural sketch variations</p>
          </div>
          <div>
            <h5 class="font-medium theme-headline mb-1">Monochrome Themes</h5>
            <p>8 carefully crafted monochrome palettes for wireframe consistency</p>
          </div>
          <div>
            <h5 class="font-medium theme-headline mb-1">Prototyping Ready</h5>
            <p>Perfect for rapid prototyping and design system documentation</p>
          </div>
          <div>
            <h5 class="font-medium theme-headline mb-1">Short Stack Font</h5>
            <p>Integrated with authentic handwritten typography for complete wireframe aesthetic</p>
          </div>
        </div>
        <div class="mt-4 p-3 wireframe-box doodle-border text-center">
          <span class="wireframe-text text-sm">🎨 Try switching themes to see monochrome adaptation!</span>
        </div>
      </div>
    </div>
  </ComponentGrid>
</div>

<style>
  .showcase-item {
    padding: 1.5rem;
    border-radius: 0.5rem;
    transition: all 0.3s ease;
    background-color: var(--color-theme-bg);
  }
  
  .showcase-item:hover {
    box-shadow: 0 10px 25px -3px rgb(0 0 0 / 0.1), 0 4px 6px -2px rgb(0 0 0 / 0.1);
  }

  .component-demo {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 120px;
    padding: 1rem;
    border-radius: 0.375rem;
    background-color: var(--color-theme-section-bg);
  }

  .code-snippet {
    display: block;
    font-size: 0.75rem;
    padding: 0.75rem;
    border-radius: 0.375rem;
    font-family: ui-monospace, SFMono-Regular, "SF Mono", Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    text-align: left;
    white-space: pre-wrap;
    word-break: break-all;
    background-color: var(--color-theme-quaternary);
    color: var(--color-theme-paragraph);
  }

  .card-showcase h4 {
    color: var(--color-theme-headline);
  }

  /* Focus styles for better accessibility */
  .showcase-item:focus-within {
    outline: 2px solid transparent;
    outline-offset: 2px;
    box-shadow: 0 0 0 2px var(--color-theme-button), 0 0 0 4px var(--color-theme-bg);
  }

  /* Interactive card hover effects */
  .component-demo .p-6.rounded-lg.theme-card-bg.transition-all:hover {
    transform: translateY(-4px);
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  }

  /* Hover border effect */
  .component-demo .hover\\:border-current:hover {
    border-color: var(--color-theme-button) !important;
  }

  /* Responsive adjustments */
  @media (max-width: 640px) {
    .component-demo {
      min-height: 100px;
      padding: 0.75rem;
    }
    
    .code-snippet {
      font-size: 10px;
    }

    .component-demo .max-w-sm,
    .component-demo .max-w-lg,
    .component-demo .max-w-4xl {
      max-width: 100%;
    }
  }

  /* Ensure proper contrast for overlaid text */
  .component-demo .absolute.inset-0 {
    backdrop-filter: blur(1px);
  }
</style>