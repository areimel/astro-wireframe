---
import { Icon } from "astro-icon/components";

export interface Props {
  /** Title for the calculator section */
  title?: string;
  /** Description for the calculator section */
  description?: string;
  /** Custom padding classes for the section */
  padding?: string;
  /** Custom classes for the section */
  class?: string;
  /** Background variant */
  background?: "default" | "alternate";
  /** Currency symbol */
  currency?: string;
  /** Show annual discount */
  showAnnualDiscount?: boolean;
}

const { 
  title = "Pricing Calculator",
  description = "Customize your plan and see exactly what you'll pay. No hidden fees or surprises.",
  padding = "py-16", 
  class: className = "",
  background = "default",
  currency = "$",
  showAnnualDiscount = true
} = Astro.props;

const bgClass = background === "alternate" ? "wireframe-section-alt" : "wireframe-section";

// Calculator options
const baseOptions = [
  {
    id: "users",
    name: "Team Members",
    description: "Number of users in your team",
    icon: "bx:bx-group",
    min: 1,
    max: 50,
    default: 5,
    pricePerUnit: 12,
    freeIncluded: 3
  },
  {
    id: "storage",
    name: "Storage (GB)",
    description: "Additional storage beyond included amount",
    icon: "bx:bx-cloud",
    min: 0,
    max: 1000,
    default: 100,
    pricePerUnit: 0.5,
    freeIncluded: 50
  },
  {
    id: "projects", 
    name: "Projects",
    description: "Maximum number of active projects",
    icon: "bx:bx-folder",
    min: 1,
    max: 100,
    default: 10,
    pricePerUnit: 5,
    freeIncluded: 5
  }
];

const addOnOptions = [
  {
    id: "priority_support",
    name: "Priority Support",
    description: "24/7 phone and chat support with 2-hour response time",
    icon: "bx:bx-support",
    price: 49,
    popular: true
  },
  {
    id: "advanced_analytics",
    name: "Advanced Analytics",
    description: "Detailed usage analytics and custom reporting",
    icon: "bx:bx-line-chart",
    price: 29,
    popular: false
  },
  {
    id: "api_access",
    name: "API Access", 
    description: "Full REST API access with unlimited requests",
    icon: "bx:bx-code-block",
    price: 39,
    popular: false
  },
  {
    id: "white_label",
    name: "White Label",
    description: "Remove branding and customize with your logo",
    icon: "bx:bx-brush",
    price: 99,
    popular: false
  }
];
---

<section class={`${bgClass} ${padding} ${className}`}>
  <div class="container mx-auto px-4">
    {title && (
      <div class="text-center mb-12">
        <h2 class="wireframe-heading text-3xl lg:text-4xl mb-4">
          {title}
        </h2>
        {description && (
          <p class="wireframe-text text-xl max-w-3xl mx-auto">
            {description}
          </p>
        )}
      </div>
    )}

    <div class="max-w-4xl mx-auto">
      <div class="grid lg:grid-cols-3 gap-8">
        
        <!-- Configuration Panel -->
        <div class="lg:col-span-2">
          <div class="wireframe-box doodle-border p-6">
            <h3 class="wireframe-heading text-xl mb-6">Configure Your Plan</h3>

            <!-- Base Options -->
            <div class="space-y-6 mb-8">
              {baseOptions.map((option) => (
                <div class="space-y-3">
                  <div class="flex items-center gap-3">
                    <Icon name={option.icon} class="w-5 h-5" style="color: var(--color-theme-button);" />
                    <div class="flex-grow">
                      <label class="wireframe-text font-medium">{option.name}</label>
                      <p class="wireframe-text text-sm" style="color: var(--color-theme-tertiary);">{option.description}</p>
                    </div>
                    <div class="text-right">
                      <span class="wireframe-text font-medium" id={`${option.id}-value`}>{option.default}</span>
                      {option.freeIncluded > 0 && (
                        <p class="wireframe-text text-xs" style="color: var(--color-theme-tertiary);">
                          {option.freeIncluded} included
                        </p>
                      )}
                    </div>
                  </div>
                  
                  <!-- Range Slider -->
                  <div class="relative">
                    <input 
                      type="range" 
                      id={option.id}
                      name={option.id}
                      min={option.min} 
                      max={option.max} 
                      value={option.default}
                      class="w-full h-2 rounded-lg appearance-none cursor-pointer slider"
                      data-price-per-unit={option.pricePerUnit}
                      data-free-included={option.freeIncluded}
                    />
                    <div class="flex justify-between text-xs wireframe-text mt-1" style="color: var(--color-theme-tertiary);">
                      <span>{option.min}</span>
                      <span>{option.max}</span>
                    </div>
                  </div>
                </div>
              ))}
            </div>

            <!-- Add-ons Section -->
            <div class="border-t pt-6" style="border-color: var(--color-theme-stroke);">
              <h4 class="wireframe-heading text-lg mb-4">Add-ons & Extras</h4>
              <div class="grid sm:grid-cols-2 gap-4">
                {addOnOptions.map((addon) => (
                  <label class="wireframe-box doodle-border p-4 cursor-pointer transition-all hover:opacity-80 relative">
                    <input 
                      type="checkbox" 
                      id={addon.id}
                      name={addon.id}
                      class="addon-checkbox hidden"
                      data-price={addon.price}
                    />
                    
                    {addon.popular && (
                      <div class="absolute -top-2 -right-2">
                        <span class="px-2 py-1 text-xs rounded-full font-medium"
                              style="background-color: var(--color-theme-highlight); color: var(--color-theme-bg);">
                          Popular
                        </span>
                      </div>
                    )}
                    
                    <div class="flex items-start gap-3">
                      <div class="checkbox-custom w-5 h-5 border-2 rounded flex-shrink-0 mt-1 flex items-center justify-center"
                           style="border-color: var(--color-theme-stroke);">
                        <Icon name="bx:bx-check" class="w-3 h-3 hidden checkbox-icon" style="color: var(--color-theme-button-text);" />
                      </div>
                      
                      <div class="flex-grow">
                        <div class="flex items-center gap-2 mb-1">
                          <Icon name={addon.icon} class="w-4 h-4" style="color: var(--color-theme-button);" />
                          <span class="wireframe-text font-medium">{addon.name}</span>
                        </div>
                        <p class="wireframe-text text-sm mb-2" style="color: var(--color-theme-tertiary);">
                          {addon.description}
                        </p>
                        <span class="wireframe-text font-medium" style="color: var(--color-theme-button);">
                          +{currency}{addon.price}/month
                        </span>
                      </div>
                    </div>
                  </label>
                ))}
              </div>
            </div>
          </div>
        </div>

        <!-- Price Summary -->
        <div class="lg:col-span-1">
          <div class="wireframe-box doodle-border p-6 sticky top-8">
            <h3 class="wireframe-heading text-xl mb-6">Price Summary</h3>

            <!-- Billing Toggle -->
            <div class="mb-6">
              <div class="wireframe-box doodle-border rounded-full p-1 flex">
                <button id="monthly-billing" class="flex-1 py-2 px-3 rounded-full text-sm font-medium transition-all"
                        style="background-color: var(--color-theme-button); color: var(--color-theme-button-text);">
                  Monthly
                </button>
                <button id="yearly-billing" class="flex-1 py-2 px-3 rounded-full text-sm font-medium transition-all"
                        style="color: var(--color-theme-paragraph);">
                  Yearly
                </button>
              </div>
              {showAnnualDiscount && (
                <p class="wireframe-text text-xs text-center mt-2" style="color: var(--color-theme-tertiary);">
                  Save 20% with annual billing
                </p>
              )}
            </div>

            <!-- Base Price -->
            <div class="space-y-3 mb-6">
              <div class="flex justify-between items-center">
                <span class="wireframe-text">Base Price</span>
                <span class="wireframe-text font-medium" id="base-price">{currency}29</span>
              </div>
              
              <!-- Variable Pricing -->
              <div id="variable-costs" class="space-y-2">
                <!-- Dynamically populated by JavaScript -->
              </div>
              
              <!-- Add-ons -->
              <div id="addon-costs" class="space-y-2">
                <!-- Dynamically populated by JavaScript -->
              </div>
            </div>

            <!-- Subtotal -->
            <div class="border-t pt-4 mb-4" style="border-color: var(--color-theme-stroke);">
              <div class="flex justify-between items-center mb-2">
                <span class="wireframe-text">Subtotal</span>
                <span class="wireframe-text font-medium" id="subtotal">{currency}29</span>
              </div>
              
              <div id="annual-discount" class="flex justify-between items-center text-sm" style="display: none;">
                <span class="wireframe-text">Annual Discount (20%)</span>
                <span class="wireframe-text" style="color: var(--color-theme-button);" id="discount-amount">-{currency}0</span>
              </div>
            </div>

            <!-- Total -->
            <div class="border-t pt-4 mb-6" style="border-color: var(--color-theme-stroke);">
              <div class="flex justify-between items-center">
                <span class="wireframe-heading text-xl">Total</span>
                <div class="text-right">
                  <span class="wireframe-heading text-2xl" style="color: var(--color-theme-button);" id="total-price">
                    {currency}29
                  </span>
                  <div class="wireframe-text text-sm" id="billing-period">/month</div>
                </div>
              </div>
            </div>

            <!-- CTA Buttons -->
            <div class="space-y-3">
              <button class="w-full py-3 px-4 rounded-lg font-medium transition-opacity hover:opacity-80"
                      style="background-color: var(--color-theme-button); color: var(--color-theme-button-text);">
                Start Free Trial
              </button>
              <button class="w-full py-3 px-4 rounded-lg font-medium border transition-opacity hover:opacity-80"
                      style="border-color: var(--color-theme-stroke); color: var(--color-theme-button);">
                Contact Sales
              </button>
            </div>

            <!-- Trial Info -->
            <div class="mt-4 text-center">
              <p class="wireframe-text text-xs" style="color: var(--color-theme-tertiary);">
                14-day free trial • No credit card required • Cancel anytime
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<!-- Calculator JavaScript -->
<script define:vars={{ baseOptions, addOnOptions, currency, showAnnualDiscount }}>
  document.addEventListener('DOMContentLoaded', function() {
    let isYearly = false;
    const basePrice = 29;
    
    // Update price calculation
    function updatePricing() {
      let variableCosts = 0;
      let addonCosts = 0;
      
      // Calculate variable costs
      const variableCostHTML = [];
      baseOptions.forEach(option => {
        const slider = document.getElementById(option.id);
        const value = parseInt(slider.value);
        const billableUnits = Math.max(0, value - option.freeIncluded);
        const cost = billableUnits * option.pricePerUnit;
        
        if (cost > 0) {
          variableCosts += cost;
          variableCostHTML.push(`
            <div class="flex justify-between items-center text-sm">
              <span class="wireframe-text">${option.name} (${billableUnits} × ${currency}${option.pricePerUnit})</span>
              <span class="wireframe-text">${currency}${cost}</span>
            </div>
          `);
        }
        
        // Update display value
        document.getElementById(`${option.id}-value`).textContent = value;
      });
      
      // Calculate addon costs
      const addonCostHTML = [];
      document.querySelectorAll('.addon-checkbox:checked').forEach(checkbox => {
        const price = parseFloat(checkbox.dataset.price);
        addonCosts += price;
        const label = checkbox.closest('label').querySelector('.wireframe-text.font-medium').textContent;
        addonCostHTML.push(`
          <div class="flex justify-between items-center text-sm">
            <span class="wireframe-text">${label}</span>
            <span class="wireframe-text">${currency}${price}</span>
          </div>
        `);
      });
      
      // Update UI
      document.getElementById('variable-costs').innerHTML = variableCostHTML.join('');
      document.getElementById('addon-costs').innerHTML = addonCostHTML.join('');
      
      const subtotal = basePrice + variableCosts + addonCosts;
      document.getElementById('subtotal').textContent = `${currency}${subtotal}`;
      
      // Apply annual discount
      let total = subtotal;
      let discountAmount = 0;
      
      if (isYearly && showAnnualDiscount) {
        discountAmount = Math.round(subtotal * 12 * 0.2);
        total = subtotal * 12 - discountAmount;
        document.getElementById('annual-discount').style.display = 'flex';
        document.getElementById('discount-amount').textContent = `-${currency}${discountAmount}`;
      } else {
        document.getElementById('annual-discount').style.display = 'none';
        if (isYearly) {
          total = subtotal * 12;
        }
      }
      
      document.getElementById('total-price').textContent = `${currency}${Math.round(total)}`;
      document.getElementById('billing-period').textContent = isYearly ? '/year' : '/month';
    }
    
    // Range slider event listeners
    baseOptions.forEach(option => {
      const slider = document.getElementById(option.id);
      slider.addEventListener('input', updatePricing);
    });
    
    // Addon checkbox event listeners
    document.querySelectorAll('.addon-checkbox').forEach(checkbox => {
      checkbox.addEventListener('change', function() {
        const customCheckbox = this.closest('label').querySelector('.checkbox-custom');
        const checkIcon = customCheckbox.querySelector('.checkbox-icon');
        
        if (this.checked) {
          customCheckbox.style.backgroundColor = 'var(--color-theme-button)';
          customCheckbox.style.borderColor = 'var(--color-theme-button)';
          checkIcon.classList.remove('hidden');
        } else {
          customCheckbox.style.backgroundColor = 'transparent';
          customCheckbox.style.borderColor = 'var(--color-theme-stroke)';
          checkIcon.classList.add('hidden');
        }
        
        updatePricing();
      });
    });
    
    // Billing toggle event listeners
    document.getElementById('monthly-billing').addEventListener('click', function() {
      isYearly = false;
      this.style.backgroundColor = 'var(--color-theme-button)';
      this.style.color = 'var(--color-theme-button-text)';
      document.getElementById('yearly-billing').style.backgroundColor = 'transparent';
      document.getElementById('yearly-billing').style.color = 'var(--color-theme-paragraph)';
      updatePricing();
    });
    
    document.getElementById('yearly-billing').addEventListener('click', function() {
      isYearly = true;
      this.style.backgroundColor = 'var(--color-theme-button)';
      this.style.color = 'var(--color-theme-button-text)';
      document.getElementById('monthly-billing').style.backgroundColor = 'transparent';
      document.getElementById('monthly-billing').style.color = 'var(--color-theme-paragraph)';
      updatePricing();
    });
    
    // Initial calculation
    updatePricing();
  });
</script>

<style>
  /* Range Slider Styling */
  .slider {
    background: var(--color-theme-quaternary);
  }
  
  .slider::-webkit-slider-thumb {
    appearance: none;
    height: 20px;
    width: 20px;
    border-radius: 50%;
    background: var(--color-theme-button);
    cursor: pointer;
  }
  
  .slider::-moz-range-thumb {
    height: 20px;
    width: 20px;
    border-radius: 50%;
    background: var(--color-theme-button);
    cursor: pointer;
    border: none;
  }
  
  /* Checkbox Styling */
  .checkbox-custom {
    transition: all 0.2s ease;
  }
  
  label:hover .checkbox-custom {
    border-color: var(--color-theme-button);
  }
</style>