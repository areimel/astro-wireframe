---
import { Icon } from "astro-icon/components";

export interface Props {
  /** Title for the gallery section */
  title?: string;
  /** Description for the gallery section */
  description?: string;
  /** Gallery layout style */
  layout?: "masonry" | "grid" | "featured";
  /** Number of images to display */
  imageCount?: number;
  /** Show image metadata */
  showMetadata?: boolean;
  /** Show gallery filters */
  showFilters?: boolean;
  /** Custom padding classes for the section */
  padding?: string;
  /** Custom classes for the section */
  class?: string;
  /** Background variant */
  background?: "default" | "alternate";
}

const { 
  title = "Product Gallery",
  description = "Explore our products from every angle with high-quality images and detailed views.",
  layout = "featured",
  imageCount = 8,
  showMetadata = true,
  showFilters = true,
  padding = "py-16", 
  class: className = "",
  background = "default"
} = Astro.props;

const bgClass = background === "alternate" ? "wireframe-section-alt" : "wireframe-section";

// Gallery categories/filters
const categories = ["All", "Product Shots", "In Use", "Details", "Lifestyle"];

// Sample gallery images with metadata
const images = Array.from({ length: imageCount }, (_, i) => ({
  id: i + 1,
  title: `Product Image ${i + 1}`,
  category: categories[Math.floor(Math.random() * (categories.length - 1)) + 1],
  dimensions: "1920x1080",
  type: ["Product Shot", "Lifestyle", "Detail", "In Use"][Math.floor(Math.random() * 4)],
  featured: i === 0 || i === 3, // First and fourth images are featured
  size: i === 0 ? "large" : i === 3 ? "medium" : "small"
}));
---

<section class={`${bgClass} ${padding} ${className}`}>
  <div class="container mx-auto px-4">
    {title && (
      <div class="text-center mb-12">
        <h2 class="wireframe-heading text-3xl lg:text-4xl mb-4">
          {title}
        </h2>
        {description && (
          <p class="wireframe-text text-xl max-w-3xl mx-auto">
            {description}
          </p>
        )}
      </div>
    )}

    {showFilters && (
      <div class="flex flex-wrap justify-center gap-2 mb-8">
        {categories.map((category, index) => (
          <button class={`px-4 py-2 rounded-lg transition-all hover:opacity-80 ${
            index === 0 ? 'active' : ''
          }`}
          style={index === 0 
            ? `background-color: var(--color-theme-button); color: var(--color-theme-button-text);`
            : `border: 1px solid var(--color-theme-stroke); color: var(--color-theme-button);`}>
            <span class="text-sm font-medium">{category}</span>
          </button>
        ))}
      </div>
    )}

    {layout === "featured" && (
      <!-- Featured Layout: Hero image + smaller grid -->
      <div class="space-y-6">
        <!-- Large Featured Image -->
        <div class="wireframe-box doodle-border rounded-lg overflow-hidden">
          <div class="aspect-[21/9] flex items-center justify-center relative">
            <div class="text-center">
              <Icon name="bx:bx-image" class="w-24 h-24 mx-auto mb-4" style="color: var(--color-theme-tertiary);" />
              <h3 class="wireframe-heading text-2xl mb-2">Featured Product Image</h3>
              <p class="wireframe-text">High-resolution hero shot showcasing the main product</p>
            </div>
            {showMetadata && (
              <div class="absolute bottom-4 left-4">
                <div class="wireframe-box doodle-border px-3 py-2 rounded-lg backdrop-blur">
                  <p class="wireframe-text text-sm font-medium">Hero Shot</p>
                  <p class="wireframe-text text-xs" style="color: var(--color-theme-tertiary);">3840x1620</p>
                </div>
              </div>
            )}
            <div class="absolute top-4 right-4 flex gap-2">
              <button class="wireframe-box doodle-border p-2 rounded-lg backdrop-blur hover:opacity-80 transition-opacity">
                <Icon name="bx:bx-expand" class="w-4 h-4" style="color: var(--color-theme-button);" />
              </button>
              <button class="wireframe-box doodle-border p-2 rounded-lg backdrop-blur hover:opacity-80 transition-opacity">
                <Icon name="bx:bx-share" class="w-4 h-4" style="color: var(--color-theme-button);" />
              </button>
            </div>
          </div>
        </div>

        <!-- Secondary Images Grid -->
        <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-4">
          {images.slice(1, 5).map((image, index) => (
            <div class="wireframe-box doodle-border rounded-lg overflow-hidden group cursor-pointer hover:opacity-90 transition-opacity">
              <div class="aspect-square flex items-center justify-center relative">
                <div class="text-center">
                  <Icon name="bx:bx-image" class="w-12 h-12 mx-auto mb-2" style="color: var(--color-theme-tertiary);" />
                  <p class="wireframe-text text-sm">{image.type}</p>
                  <p class="wireframe-text text-xs" style="color: var(--color-theme-tertiary);">{image.dimensions}</p>
                </div>
                {showMetadata && (
                  <div class="absolute bottom-2 left-2 opacity-0 group-hover:opacity-100 transition-opacity">
                    <div class="wireframe-box doodle-border px-2 py-1 rounded backdrop-blur">
                      <p class="wireframe-text text-xs">{image.category}</p>
                    </div>
                  </div>
                )}
                <div class="absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity">
                  <button class="wireframe-box doodle-border p-1 rounded backdrop-blur">
                    <Icon name="bx:bx-expand" class="w-3 h-3" style="color: var(--color-theme-button);" />
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    )}

    {layout === "grid" && (
      <!-- Regular Grid Layout -->
      <div class="grid sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">
        {images.map((image) => (
          <div class="wireframe-box doodle-border rounded-lg overflow-hidden group cursor-pointer hover:opacity-90 transition-opacity">
            <div class="aspect-square flex items-center justify-center relative">
              <div class="text-center">
                <Icon name="bx:bx-image" class="w-12 h-12 mx-auto mb-2" style="color: var(--color-theme-tertiary);" />
                <p class="wireframe-text text-sm">{image.title}</p>
                <p class="wireframe-text text-xs" style="color: var(--color-theme-tertiary);">{image.dimensions}</p>
              </div>
              {showMetadata && (
                <div class="absolute bottom-2 left-2 opacity-0 group-hover:opacity-100 transition-opacity">
                  <div class="wireframe-box doodle-border px-2 py-1 rounded backdrop-blur">
                    <p class="wireframe-text text-xs">{image.category}</p>
                  </div>
                </div>
              )}
              <div class="absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity flex gap-1">
                <button class="wireframe-box doodle-border p-1 rounded backdrop-blur">
                  <Icon name="bx:bx-expand" class="w-3 h-3" style="color: var(--color-theme-button);" />
                </button>
                <button class="wireframe-box doodle-border p-1 rounded backdrop-blur">
                  <Icon name="bx:bx-download" class="w-3 h-3" style="color: var(--color-theme-button);" />
                </button>
              </div>
            </div>
          </div>
        ))}
      </div>
    )}

    {layout === "masonry" && (
      <!-- Masonry Layout -->
      <div class="columns-1 sm:columns-2 lg:columns-3 xl:columns-4 gap-4 space-y-4">
        {images.map((image, index) => (
          <div class="wireframe-box doodle-border rounded-lg overflow-hidden group cursor-pointer hover:opacity-90 transition-opacity break-inside-avoid">
            <div class={`flex items-center justify-center relative ${
              index % 3 === 0 ? 'aspect-[4/5]' : index % 3 === 1 ? 'aspect-square' : 'aspect-[4/3]'
            }`}>
              <div class="text-center">
                <Icon name="bx:bx-image" class="w-12 h-12 mx-auto mb-2" style="color: var(--color-theme-tertiary);" />
                <p class="wireframe-text text-sm">{image.title}</p>
                <p class="wireframe-text text-xs" style="color: var(--color-theme-tertiary);">{image.type}</p>
              </div>
              {showMetadata && (
                <div class="absolute bottom-2 left-2 opacity-0 group-hover:opacity-100 transition-opacity">
                  <div class="wireframe-box doodle-border px-2 py-1 rounded backdrop-blur">
                    <p class="wireframe-text text-xs">{image.category}</p>
                  </div>
                </div>
              )}
              <div class="absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity">
                <button class="wireframe-box doodle-border p-1 rounded backdrop-blur">
                  <Icon name="bx:bx-expand" class="w-3 h-3" style="color: var(--color-theme-button);" />
                </button>
              </div>
            </div>
          </div>
        ))}
      </div>
    )}

    <!-- Gallery Stats -->
    <div class="flex items-center justify-between mt-8 p-4 wireframe-box doodle-border rounded-lg">
      <div class="flex items-center gap-6">
        <div class="text-center">
          <p class="wireframe-heading text-2xl">{imageCount}</p>
          <p class="wireframe-text text-sm" style="color: var(--color-theme-tertiary);">Total Images</p>
        </div>
        <div class="text-center">
          <p class="wireframe-heading text-2xl">{categories.length - 1}</p>
          <p class="wireframe-text text-sm" style="color: var(--color-theme-tertiary);">Categories</p>
        </div>
        <div class="text-center">
          <p class="wireframe-heading text-2xl">HD</p>
          <p class="wireframe-text text-sm" style="color: var(--color-theme-tertiary);">Quality</p>
        </div>
      </div>
      
      <div class="flex gap-2">
        <button class="wireframe-box doodle-border px-4 py-2 rounded-lg hover:opacity-80 transition-opacity">
          <Icon name="bx:bx-download" class="w-4 h-4 mr-2" style="color: var(--color-theme-button);" />
          <span class="wireframe-text text-sm font-medium" style="color: var(--color-theme-button);">
            Download All
          </span>
        </button>
        <button class="px-4 py-2 rounded-lg hover:opacity-80 transition-opacity" 
                style="background-color: var(--color-theme-button); color: var(--color-theme-button-text);">
          <Icon name="bx:bx-slideshow" class="w-4 h-4 mr-2" />
          <span class="text-sm font-medium">Start Slideshow</span>
        </button>
      </div>
    </div>

    <!-- Load More -->
    <div class="text-center mt-8">
      <button class="wireframe-box doodle-border py-3 px-8 rounded-lg hover:opacity-80 transition-opacity">
        <span class="wireframe-text font-medium" style="color: var(--color-theme-button);">
          Load More Images (24 remaining)
        </span>
      </button>
    </div>
  </div>
</section>