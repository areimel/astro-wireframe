---
// FooterForm component for newsletter subscription using Web3Forms
const WEB3FORMS_KEY = import.meta.env.WEB3FORMS_KEY ?? "";
---

<!-- To make this newsletter form work, create your free access key from https://web3forms.com/
     Then you will get all form submissions in your email inbox. -->
<form
  action="https://api.web3forms.com/submit"
  method="POST"
  id="newsletter-form"
  class="space-y-3 needs-validation doodle"
  novalidate>
  <input type="hidden" name="access_key" value={WEB3FORMS_KEY} />
  <input type="hidden" name="subject" value="Newsletter Subscription" />
  <!-- Create your free access key from https://web3forms.com/ -->
  <input type="checkbox" class="hidden" style="display:none" name="botcheck" />
  
  <div>
    <input 
      type="email" 
      name="email"
      placeholder="Enter your email"
      required
      class="w-full px-3 py-2 text-sm rounded-md focus:outline-none theme-card-bg theme-card-text"
    />
    <div class="empty-feedback text-xs mt-1" style="color: var(--color-theme-stroke);">
      Please provide your email address.
    </div>
    <div class="invalid-feedback text-xs mt-1" style="color: var(--color-theme-stroke);">
      Please provide a valid email address.
    </div>
  </div>
  
  <button 
    type="submit"
    class="w-full theme-button-primary text-sm font-medium py-2 px-4 rounded-md transition-colors disabled:opacity-50"
  >
    Subscribe
  </button>
  
  <div id="newsletter-result" class="text-xs text-center theme-paragraph"></div>
</form>

<style>
  .invalid-feedback,
  .empty-feedback {
    display: none;
  }

  .was-validated :placeholder-shown:invalid ~ .empty-feedback {
    display: block;
  }

  .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
    display: block;
  }

  /* DoodleCSS handles form element borders automatically */
</style>

<script is:inline>
  const newsletterForm = document.getElementById("newsletter-form");
  const newsletterResult = document.getElementById("newsletter-result");

  if (newsletterForm) {
    newsletterForm.addEventListener("submit", function (e) {
      e.preventDefault();
      newsletterForm.classList.add("was-validated");
      
      if (!newsletterForm.checkValidity()) {
        newsletterForm.querySelectorAll(":invalid")[0].focus();
        return;
      }
      
      const formData = new FormData(newsletterForm);
      const object = Object.fromEntries(formData);
      const json = JSON.stringify(object);

      const submitButton = newsletterForm.querySelector('button[type="submit"]');
      submitButton.disabled = true;
      submitButton.textContent = "Subscribing...";
      newsletterResult.innerHTML = "";

      fetch("https://api.web3forms.com/submit", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
        body: json,
      })
        .then(async (response) => {
          let json = await response.json();
          if (response.status == 200) {
            newsletterResult.style.color = "var(--color-theme-highlight)";
            newsletterResult.innerHTML = "Successfully subscribed!";
          } else {
            console.log(response);
            newsletterResult.style.color = "var(--color-theme-stroke)";
            newsletterResult.innerHTML = json.message || "Subscription failed.";
          }
        })
        .catch((error) => {
          console.log(error);
          newsletterResult.style.color = "var(--color-theme-stroke)";
          newsletterResult.innerHTML = "Something went wrong!";
        })
        .then(function () {
          submitButton.disabled = false;
          submitButton.textContent = "Subscribe";
          newsletterForm.reset();
          newsletterForm.classList.remove("was-validated");
          
          setTimeout(() => {
            newsletterResult.innerHTML = "";
            newsletterResult.style.color = "";
          }, 5000);
        });
    });
  }
</script>